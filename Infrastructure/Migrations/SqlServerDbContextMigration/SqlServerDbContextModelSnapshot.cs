// <auto-generated />
using Infrastructure.AppDbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations.SqlServerDbContextMigration
{
    [DbContext(typeof(SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Phone = "123-456-7890"
                        },
                        new
                        {
                            CustomerID = 2,
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Phone = "234-567-8901"
                        },
                        new
                        {
                            CustomerID = 3,
                            Email = "michael.johnson@example.com",
                            Name = "Michael Johnson",
                            Phone = "345-678-9012"
                        },
                        new
                        {
                            CustomerID = 4,
                            Email = "emily.davis@example.com",
                            Name = "Emily Davis",
                            Phone = "456-789-0123"
                        },
                        new
                        {
                            CustomerID = 5,
                            Email = "robert.wilson@example.com",
                            Name = "Robert Wilson",
                            Phone = "567-890-1234"
                        },
                        new
                        {
                            CustomerID = 6,
                            Email = "jessica.brown@example.com",
                            Name = "Jessica Brown",
                            Phone = "678-901-2345"
                        },
                        new
                        {
                            CustomerID = 7,
                            Email = "david.miller@example.com",
                            Name = "David Miller",
                            Phone = "789-012-3456"
                        },
                        new
                        {
                            CustomerID = 8,
                            Email = "sarah.taylor@example.com",
                            Name = "Sarah Taylor",
                            Phone = "890-123-4567"
                        },
                        new
                        {
                            CustomerID = 9,
                            Email = "christopher.martinez@example.com",
                            Name = "Christopher Martinez",
                            Phone = "901-234-5678"
                        },
                        new
                        {
                            CustomerID = 10,
                            Email = "amanda.anderson@example.com",
                            Name = "Amanda Anderson",
                            Phone = "012-345-6789"
                        });
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.HasKey("LocationID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            Address = "123 Main St, City A",
                            CustomerID = 1
                        },
                        new
                        {
                            LocationID = 2,
                            Address = "456 Oak St, City A",
                            CustomerID = 1
                        },
                        new
                        {
                            LocationID = 3,
                            Address = "789 Pine St, City B",
                            CustomerID = 2
                        },
                        new
                        {
                            LocationID = 4,
                            Address = "101 Maple St, City B",
                            CustomerID = 2
                        },
                        new
                        {
                            LocationID = 5,
                            Address = "202 Cedar St, City C",
                            CustomerID = 3
                        },
                        new
                        {
                            LocationID = 6,
                            Address = "303 Birch St, City C",
                            CustomerID = 3
                        },
                        new
                        {
                            LocationID = 7,
                            Address = "404 Walnut St, City D",
                            CustomerID = 4
                        },
                        new
                        {
                            LocationID = 8,
                            Address = "505 Chestnut St, City D",
                            CustomerID = 4
                        },
                        new
                        {
                            LocationID = 9,
                            Address = "606 Spruce St, City E",
                            CustomerID = 5
                        },
                        new
                        {
                            LocationID = 10,
                            Address = "707 Redwood St, City E",
                            CustomerID = 5
                        },
                        new
                        {
                            LocationID = 11,
                            Address = "808 Elm St, City F",
                            CustomerID = 6
                        },
                        new
                        {
                            LocationID = 12,
                            Address = "909 Cypress St, City F",
                            CustomerID = 6
                        },
                        new
                        {
                            LocationID = 13,
                            Address = "1010 Fir St, City G",
                            CustomerID = 7
                        },
                        new
                        {
                            LocationID = 14,
                            Address = "1111 Beech St, City G",
                            CustomerID = 7
                        },
                        new
                        {
                            LocationID = 15,
                            Address = "1212 Dogwood St, City H",
                            CustomerID = 8
                        },
                        new
                        {
                            LocationID = 16,
                            Address = "1313 Magnolia St, City H",
                            CustomerID = 8
                        },
                        new
                        {
                            LocationID = 17,
                            Address = "1414 Aspen St, City I",
                            CustomerID = 9
                        },
                        new
                        {
                            LocationID = 18,
                            Address = "1515 Willow St, City I",
                            CustomerID = 9
                        },
                        new
                        {
                            LocationID = 19,
                            Address = "1616 Hickory St, City J",
                            CustomerID = 10
                        },
                        new
                        {
                            LocationID = 20,
                            Address = "1717 Sycamore St, City J",
                            CustomerID = 10
                        });
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.HasOne("Domain.Customer", "Customer")
                        .WithMany("Locations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
